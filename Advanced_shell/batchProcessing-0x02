#!/bin/bash

# Create folder for Pokémon data
mkdir -p pokemon_data

# List of Pokémon to fetch
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch one Pokémon with retry logic
fetch_pokemon() {
    local pokemon=$1
    local max_retries=3
    local retry=0
    
    # Convert to lowercase
    pokemon=$(echo "$pokemon" | tr '[:upper:]' '[:lower:]')
    
    echo "Fetching data for $pokemon..."
    
    # Build URL and output path
    local url="https://pokeapi.co/api/v2/pokemon/$pokemon"
    local output="pokemon_data/${pokemon}.json"
    
    # Retry loop (max 3 attempts)
    while [ $retry -lt $max_retries ]; do
        # Attempt to fetch data
        curl -s "$url" -o "$output"
        
        # Check if successful and file is not empty
        if [ $? -eq 0 ] && [ -s "$output" ]; then
            echo "Saved data to $output ✅"
            return 0
        else
            retry=$((retry + 1))
            if [ $retry -lt $max_retries ]; then
                echo "Retry $retry/$max_retries for $pokemon..."
                sleep 2
            fi
        fi
    done
    
    # If we get here, all retries failed
    echo "Error: Failed to fetch $pokemon after $max_retries attempts" | tee -a pokemon_data/errors.txt
    echo "Failed to fetch $pokemon ❌"
    return 1
}

# Main loop - fetch each Pokémon sequentially
for POKEMON in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$POKEMON"
    sleep 1
done

echo ""
echo "Batch processing complete!"
